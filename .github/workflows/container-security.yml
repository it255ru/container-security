name: Dockerfile Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dockerfile-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Hadolint (Dockerfile best practices)
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        format: sarif
        output-file: hadolint-results.sarif
      continue-on-error: true
      
    - name: Run Dockle (Security scanning)
      uses: aquasecurity/dockle-action@v0.3.4
      with:
        image: none
        files: Dockerfile
        output: sarif
        output-file: dockle-results.sarif
        exit-code: 0
      continue-on-error: true
      
    - name: Run Trivy config scan (Dockerfile vulnerabilities)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: config
        scan-ref: .
        format: sarif
        output: trivy-config-results.sarif
        severity: HIGH,CRITICAL
        exit-code: 0
      continue-on-error: true
      
    - name: Generate compact report
      id: report
      run: |
        echo "## üîç Dockerfile Security Scan Report" > $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Hadolint results
        if [ -f hadolint-results.sarif ]; then
          HADOLINT_ISSUES=$(jq '.runs[0].results | length' hadolint-results.sarif)
          echo "### üê≥ Hadolint Issues: $HADOLINT_ISSUES" >> $GITHUB_STEP_SUMMARY
          if [ $HADOLINT_ISSUES -gt 0 ]; then
            jq -r '.runs[0].results[] | "‚Ä¢ **\(.level)**: \(.message.text) (–ø—Ä–∞–≤–∏–ª–æ: \(.ruleId))"' hadolint-results.sarif >> $GITHUB_STEP_SUMMARY
          else
            echo "‚úÖ No Hadolint issues found" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "### üê≥ Hadolint: No results" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Dockle results
        if [ -f dockle-results.sarif ]; then
          DOCKLE_ISSUES=$(jq '.runs[0].results | length' dockle-results.sarif)
          echo "### üîí Dockle Security Issues: $DOCKLE_ISSUES" >> $GITHUB_STEP_SUMMARY
          if [ $DOCKLE_ISSUES -gt 0 ]; then
            jq -r '.runs[0].results[] | "‚Ä¢ **\(.level)**: \(.message.text) (–ø—Ä–∞–≤–∏–ª–æ: \(.ruleId))"' dockle-results.sarif >> $GITHUB_STEP_SUMMARY
          else
            echo "‚úÖ No Dockle security issues found" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "### üîí Dockle: No results" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Trivy config results
        if [ -f trivy-config-results.sarif ]; then
          TRIVY_ISSUES=$(jq '.runs[0].results | length' trivy-config-results.sarif)
          echo "### ‚ö†Ô∏è Trivy Config Issues: $TRIVY_ISSUES" >> $GITHUB_STEP_SUMMARY
          if [ $TRIVY_ISSUES -gt 0 ]; then
            jq -r '.runs[0].results[] | "‚Ä¢ **\(.level)**: \(.message.text) - \(.ruleId)"' trivy-config-results.sarif >> $GITHUB_STEP_SUMMARY
          else
            echo "‚úÖ No Trivy config issues found" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "### ‚ö†Ô∏è Trivy Config: No results" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Calculate total issues
        TOTAL_ISSUES=$((HADOLINT_ISSUES + DOCKLE_ISSUES + TRIVY_ISSUES))
        echo "total_issues=$TOTAL_ISSUES" >> $GITHUB_OUTPUT
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "**Summary**: Found $TOTAL_ISSUES total issues" >> $GITHUB_STEP_SUMMARY
        
    - name: Fail if critical issues found
      if: steps.report.outputs.total_issues > 0
      run: |
        echo "‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ Dockerfile: ${{ steps.report.outputs.total_issues }}"
        echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –º–µ—Ä–¥–∂–µ–º:"
        echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—á–µ—Ç –≤—ã—à–µ"
        echo "2. –ò—Å–ø—Ä–∞–≤—å—Ç–µ Dockerfile"
        echo "3. –ó–∞–ø—É—à–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
        exit 1
