name: Dockerfile Line-by-Line Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dockerfile-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        format: json
        output-file: hadolint-results.json
      continue-on-error: true
      
    - name: Custom Dockerfile analysis
      run: |
        echo "## 📋 Custom Dockerfile Analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Проверка конкретных проблем в вашем Dockerfile
        echo "### 🔍 Проблемы в вашем Dockerfile:" >> $GITHUB_STEP_SUMMARY
        
        # Проверка на ADD вместо COPY
        if grep -q "ADD" Dockerfile; then
          echo "• **WARNING**: Используется ADD вместо COPY. COPY предпочтительнее для файлов" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Проверка на фиксированные версии
        if grep -q "node:14" Dockerfile; then
          echo "• **WARNING**: Используется фиксированная версия 'node:14'. Рекомендуется использовать конкретные версии" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Проверка на curl | bash
        if grep -q "curl.*|.*bash" Dockerfile; then
          echo "• **CRITICAL**: Обнаружен опасный паттерн 'curl | bash'. Это угроза безопасности!" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Проверка прав 777
        if grep -q "777" Dockerfile; then
          echo "• **CRITICAL**: Используются права 777 - это серьезная уязвимость безопасности!" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Проверка на pinning версий пакетов
        if grep -q "npm install" Dockerfile && ! grep -q "package-lock.json\|pnpm-lock.yaml" Dockerfile; then
          echo "• **WARNING**: Установка npm пакетов без фиксации версий" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Display Hadolint results
      run: |
        if [ -f hadolint-results.json ]; then
          echo "### 🐳 Hadolint Detailed Results:" >> $GITHUB_STEP_SUMMARY
          jq -r '.[] | "• Line \(.line): \(.message) (код: \(.code))"' hadolint-results.json >> $GITHUB_STEP_SUMMARY
        fi
