name: Dockerfile Security Audit

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  dockerfile_audit:
    runs-on: ubuntu-latest

    steps:
      # --- 0. Checkout ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- 1. Hadolint ---
      - name: Dockerfile Lint (Hadolint)
        run: |
          echo "üîπ Checking Dockerfile with Hadolint..."
          HADOLINT_OUTPUT=$(hadolint Dockerfile -f json || true)
          if [ -z "$HADOLINT_OUTPUT" ] || [ "$HADOLINT_OUTPUT" = "[]" ]; then
            echo "‚úÖ No Hadolint issues found."
          else
            echo "$HADOLINT_OUTPUT" | jq -r '.[] | "Line \(.line): \(.code) - \(.message)"'
            exit 1
          fi

      # --- 2. Build Docker image ---
      - name: Build Docker image
        run: docker build -t student-app:ci .

      # --- 3. Trivy scan ---
      - name: Trivy Vulnerability Scan
        run: |
          echo "üîπ Scanning Docker image with Trivy..."
          trivy image --severity CRITICAL,HIGH --ignore-unfixed student-app:ci || true
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ exit code
          VULNS=$(trivy image --severity CRITICAL,HIGH --ignore-unfixed -f json student-app:ci | jq '.Results[].Vulnerabilities | select(.!=null) | length')
          if [ "$VULNS" -gt 0 ]; then
            echo "‚ùå Found $VULNS CRITICAL/HIGH vulnerabilities in image"
            exit 1
          else
            echo "‚úÖ No critical/high vulnerabilities found."
          fi
