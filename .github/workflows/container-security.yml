    - name: Custom Dockerfile analysis
      id: analysis
      run: |
        echo "## üìã Dockerfile Analysis Results" > analysis-results.md
        echo "" >> analysis-results.md
        echo "**Scan date:** $(date)" >> analysis-results.md
        echo "**Commit:** ${{ github.sha }}" >> analysis-results.md
        echo "**Branch:** ${{ github.ref }}" >> analysis-results.md
        echo "" >> analysis-results.md
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
        ISSUE_COUNT=0
        CRITICAL_COUNT=0
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
        echo "### üîç Found Issues:" >> analysis-results.md
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ ADD –≤–º–µ—Å—Ç–æ COPY (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ grep)
        if grep -q "ADD" Dockerfile; then
          echo "‚ùå **WARNING**: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ADD –≤–º–µ—Å—Ç–æ COPY. COPY –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ –¥–ª—è —Ñ–∞–π–ª–æ–≤" >> analysis-results.md
          ISSUE_COUNT=$((ISSUE_COUNT + 1))
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
        if grep -q "node:14" Dockerfile; then
          echo "‚ö†Ô∏è **WARNING**: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è 'node:14'. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–µ—Ä—Å–∏–∏" >> analysis-results.md
          ISSUE_COUNT=$((ISSUE_COUNT + 1))
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ curl | bash
        if grep -q "curl.*|.*bash" Dockerfile; then
          echo "üö® **CRITICAL**: –û–±–Ω–∞—Ä—É–∂–µ–Ω –æ–ø–∞—Å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω 'curl | bash'. –≠—Ç–æ —É–≥—Ä–æ–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!" >> analysis-results.md
          ISSUE_COUNT=$((ISSUE_COUNT + 1))
          CRITICAL_COUNT=$((CRITICAL_COUNT + 1))
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ 777
        if grep -q "777" Dockerfile; then
          echo "üö® **CRITICAL**: –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ 777 - —ç—Ç–æ —Å–µ—Ä—å–µ–∑–Ω–∞—è —É—è–∑–≤–∏–º–æ—Å—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!" >> analysis-results.md
          ISSUE_COUNT=$((ISSUE_COUNT + 1))
          CRITICAL_COUNT=$((CRITICAL_COUNT + 1))
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ pinning –≤–µ—Ä—Å–∏–π –ø–∞–∫–µ—Ç–æ–≤
        if { grep -q "npm install" Dockerfile && ! grep -q "package-lock.json\|pnpm-lock.yaml" Dockerfile; } then
          echo "‚ö†Ô∏è **WARNING**: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –ø–∞–∫–µ—Ç–æ–≤ –±–µ–∑ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –≤–µ—Ä—Å–∏–π" >> analysis-results.md
          ISSUE_COUNT=$((ISSUE_COUNT + 1))
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ WORKDIR —Å –∞–±—Å–æ–ª—é—Ç–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
        if ! grep -q "WORKDIR /app" Dockerfile; then
          echo "‚ö†Ô∏è **WARNING**: –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏ –≤ WORKDIR" >> analysis-results.md
          ISSUE_COUNT=$((ISSUE_COUNT + 1))
        fi
        
        # –ê–Ω–∞–ª–∏–∑ Hadolint —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫)
        if [ -f hadolint-results.json ]; then
          echo "" >> analysis-results.md
          echo "### üê≥ Hadolint Results:" >> analysis-results.md
          
          # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —á—Ç–µ–Ω–∏–µ JSON —Ñ–∞–π–ª–∞
          if jq -e . hadolint-results.json > /dev/null 2>&1; then
            # –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–ª–∏–¥–Ω—ã–π JSON
            HADOLINT_COUNT=$(jq '. | length' hadolint-results.json 2>/dev/null || echo "0")
            jq -r '.[] | "‚Ä¢ **\(.level)**: Line \(.line): \(.message) (–∫–æ–¥: \(.code))"' hadolint-results.json 2>/dev/null >> analysis-results.md || echo "‚Ä¢ –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã Hadolint" >> analysis-results.md
            ISSUE_COUNT=$((ISSUE_COUNT + HADOLINT_COUNT))
          else
            echo "‚Ä¢ –§–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ Hadolint —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON" >> analysis-results.md
          fi
        else
          echo "" >> analysis-results.md
          echo "### üê≥ Hadolint Results:" >> analysis-results.md
          echo "‚Ä¢ –§–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω" >> analysis-results.md
        fi
        
        echo "" >> analysis-results.md
        echo "---" >> analysis-results.md
        echo "**Summary:** –ù–∞–π–¥–µ–Ω–æ $ISSUE_COUNT –ø—Ä–æ–±–ª–µ–º ($CRITICAL_COUNT –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö)" >> analysis-results.md
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –≤ output (–±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è GITHUB_OUTPUT –µ—Å–ª–∏ –æ–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
        echo "issue_count=$ISSUE_COUNT" | tee -a $GITHUB_OUTPUT
        echo "critical_count=$CRITICAL_COUNT" | tee -a $GITHUB_OUTPUT
